version: '3'
networks:
  cancer_network:
    driver: bridge

services:
  web-app:
    env_file: .env
    build:
      context: ./web-app
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./web-app:/code
      - ./data/dev/visualization/3d:/code/data
    networks:
      - cancer_network
    ports:
      - "${WEB_APP_PORT}:${WEB_APP_PORT}"
    command: sh -c "npm run dev"

  server:
    env_file: .env
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./server:/code
      - /code/node_modules
    networks:
      cancer_network:
        aliases:
          - ${HOST_ALIAS}
    ports:
      - "${API_PORT}:${API_PORT}"
    command: sh -c "npm run dev"
  
  tumor-detector-2d:
    build:
      context: ./models/tumor-detector-2d
    volumes:
        - ./models/tumor-detector-2d/data:/code/data
        - ./models/tumor-detector-2d/artifacts:/code/artifacts
        - ./models/tumor-detector-2d/checkpoints:/code/checkpoints
        - ./models/tumor-detector-2d/trained-model:/code/trained-model
    ports:
      - "${MODEL_TUMOR_DETECTOR_2D_PORT}:${MODEL_TUMOR_DETECTOR_2D_PORT}"
    networks:
      - cancer_network
    environment:
      - MODE=${MODE}
      - WANDB_API_KEY=${WANDB_API_KEY}
    command: sh -c "python3 index.py"
  
  data-generator:
    build:
      context: ./models/data-generator
    volumes:
        - ./data:/code/data
    ports:
      - "${MODEL_DATA_GENERATOR_PORT}:${MODEL_DATA_GENERATOR_PORT}"
    networks:
      - cancer_network
    environment:
      - WANDB_API_KEY=${WANDB_API_KEY}
    command: sh -c "python3 index.py"
  
  pancreas-segmentor-2d:
    build:
      context: ./models/pancreas-segmentor-2d
    volumes:
        - ./data/pancreas-segmentor-2d/train:/code/data
    ports:
      - "${MODEL_PANCREAS_SEGMENTOR_2D_PORT}:${MODEL_PANCREAS_SEGMENTOR_2D_PORT}"
    networks:
      - cancer_network
    environment:
      - MODE=${MODE}
      - WANDB_API_KEY=${WANDB_API_KEY}
    command: sh -c "python3 index.py"

  processing-ingestion-3d:
    build:
      context: ./processing/ingestion-3d
    volumes:
        - ./data/dev/processing/ingestion-3d:/data
        - ./artifacts/ingestion-3d:/artifacts
    ports:
      - "${PORT_PROCESSING_INGESTION_3D}:${PORT_PROCESSING_INGESTION_3D}"
    networks:
      - cancer_network
    command: sh -c "python3 index.py"
